# -*- coding: utf-8 -*-
"""RNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13O80Vl5ttRTriGPSxNTOgWo0sxOxtwqR
"""

#Rnn with keras (Impelement RNN for clasifiacation IMDB)

from keras.datasets import imdb
from keras.preprocessing import sequence
from keras.layers import Dense, Embedding
from keras.models import Sequential
from keras.layers import SimpleRNN
import matplotlib.pyplot as plt

max_features = 10000
maxlen = 500
batch_size = 32

#Load data
(input_train, y_train), (input_test, y_test) = imdb.load_data(
num_words=max_features)

#Transformation train and test dataset to sequences
input_train = sequence.pad_sequences(input_train, maxlen=maxlen)
input_test = sequence.pad_sequences(input_test, maxlen=maxlen)

"""# New section"""

model = Sequential()
model.add(Embedding(max_features, 32))
model.add(SimpleRNN(32))
model.add(Dense(1, activation='sigmoid'))
model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['acc'])
history = model.fit(input_train, y_train,
epochs=10,
batch_size=128,
validation_split=0.2)

from google.colab import drive
drive.mount('/content/drive')

acc=history.history['acc']
val_acc=history.history['val_acc']
loss=history.history['loss']
val_loss=history.history['val_loss']

epochs = range(1, len(acc) + 1)
plt.plot(epochs,acc,'bo',label='Training acc')
plt.plot(epochs,val_acc,'b',label='Validation acc')
plt.title('Training and validation accuracy')
plt.legend()
plt.figure()

plt.plot(epochs, loss, 'bo', label='Training loss')
plt.plot(epochs, val_loss, 'b', label='Validation loss')
plt.title('Training and validation loss')
plt.legend()
plt.show()

